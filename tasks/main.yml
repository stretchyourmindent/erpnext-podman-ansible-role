# SPDX-License-Identifier: MIT
---
- name: Create ERPNext dir
  remote_user: podman
  become: true
  become_user: podman
  ansible.builtin.file:
    path: /docker/erpnext
    state: directory
    mode: "2770"

- name: Create ERPNext data directories
  become: true
  become_user: podman
  loop:
    - /docker/erpnext/sites
    - /docker/erpnext/logs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "2777"

- name: Store ERPNext secrets
  remote_user: podman
  loop:
    # - name: erpnext_mysql_user_pw
    #   data: "{{ erpnext_mysql_user_pw }}"
    - name: erpnext_mysql_root_pw
      data: "{{ erpnext_mysql_root_pw }}"
  loop_control:
    label: "{{ item.name }}"
  containers.podman.podman_secret:
    state: present
    name: "{{ item.name }}"
    data: "{{ item.data }}"
  notify:
    - Systemd user daemon-reload
    - Restart ERPNext service

# - name: Copy ERPNext systemd service file
#   become: true
#   become_user: podman
#   ansible.builtin.copy:
#     src: erpnext.service
#     dest: /docker/systemd/services/erpnext.service
#     mode: "0640"
#   notify:
#     - Systemd user daemon-reload
#     - Restart ERPNext service

- name: Copy static ERPNext systemd files
  become: true
  become_user: podman
  loop:
    - erpnext.pod
    - erpnext-db.container
    - erpnext-db.volume
    - erpnext-redis-cache.container
    - erpnext-redis-cache.volume
    - erpnext-redis-queue.container
    - erpnext-redis-queue.volume
    - erpnext.network
    - erpnext-backend.container
    - erpnext-queue-long.container
    - erpnext-queue-short.container
    - erpnext-scheduler.container
    - erpnext-websocket.container
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/docker/systemd/containers/{{ item }}"
    mode: "0640"
  notify:
    - Systemd user daemon-reload
    - Restart ERPNext service

- name: Generate ERPNext container systemd files
  become: true
  become_user: podman
  loop:
    - erpnext-configurator.container
    - erpnext-create-site.container
    - erpnext-frontend.container
    - erpnext.image
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/docker/systemd/containers/{{ item }}"
    mode: "0640"
  notify:
    - Systemd user daemon-reload
    - Restart ERPNext service

- name: Generate ERPNext image container systemd file
  become: true
  become_user: podman
  ansible.builtin.template:
    src: "{{ erpnext_image_template_path }}"
    dest: "/docker/systemd/containers/erpnext.image"
    mode: "0640"
  notify:
    - Systemd user daemon-reload
    - Restart ERPNext service

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Activate ERPNext service
  become: true
  become_user: podman
  ansible.builtin.systemd_service:
    scope: user
    name: erpnext-pod
    enabled: true
    state: started
